package com.${packageName}${packageName2}.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import javax.servlet.http.HttpServletRequest;	
import com.${packageName}.model.${modelUpName};
import com.${packageName}.service.${modelUpName}Service;
import java.util.*;

@Controller
@RequestMapping("/${modelName}")
public class ${modelUpName}Controller {
	
	@Autowired
	private ${modelUpName}Service ${modelName}Service;
	
	/*
	 * @author 
	 * @description
	 * @date
	*/
	@RequestMapping(value="/index", method=RequestMethod.GET)
	public ModelAndView index(HttpServletRequest request) {
		ModelAndView mnv = new ModelAndView("");
		try {
			
		} catch (Exception e){
			e.printStackTrace();
		}
		return mnv;
	}
	
	
	/*
	 * @author 
	 * @description
	 * @date
	*/
	@RequestMapping(value="/add", method=RequestMethod.POST, produces="text/json;charset=UTF-8")
	@ResponseBody
	public Map<String, Object> add(${modelUpName} model) {
		Map<String, Object> resultMap = new HashMap<>();
		
		try {
			${modelName}Service.save(model);
			resultMap.put("code", 200);
		} catch (Exception e) {
			resultMap.put("code", 500);
		}
		return resultMap;
	}
	
	/*
	 * @author 
	 * @description
	 * @date
	*/
	@RequestMapping(value="/delete", method=RequestMethod.POST, produces="text/json;charset=UTF-8")
	@ResponseBody
	public Map<String, Object> delete(${modelUpName} model) {
		Map<String, Object> resultMap = new HashMap<>();
		
		try {
			//${modelName}Service.delById(model.getId());
			resultMap.put("code", 200);
		} catch (Exception e) {
			resultMap.put("code", 500);
		}
		return resultMap;
	}
	
	/*
	 * @author 
	 * @description
	 * @date
	*/
	@RequestMapping(value="/update", method=RequestMethod.POST, produces="text/json;charset=UTF-8")
	@ResponseBody
	public Map<String, Object> update(${modelUpName} model) {
		Map<String, Object> resultMap = new HashMap<>();
		
		try {
			${modelName}Service.update(model);
			resultMap.put("code", 200);
		} catch (Exception e) {
			resultMap.put("code", 500);
		}
		return resultMap;
	}
	
	/*
	 * @author 
	 * @description
	 * @date
	*/
	@RequestMapping(value="/get", method=RequestMethod.POST, produces="text/json;charset=UTF-8")
	@ResponseBody
	public Map<String, Object> get(${modelUpName} model) {
		Map<String, Object> resultMap = new HashMap<>();
		
		try {
			//${modelName}Service.getById(model.getId());
			resultMap.put("code", 200);
		} catch (Exception e) {
			resultMap.put("code", 500);
		}
		return resultMap;
	}
	
}
